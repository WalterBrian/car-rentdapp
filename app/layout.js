"use client"
import './globals.css'
import { Inter } from 'next/font/google'
import "@rainbow-me/rainbowkit/styles.css";
import "react-toastify/dist/ReactToastify.css";
// import "../polyfills"
import { metaMaskWallet, omniWallet, walletConnectWallet } from "@rainbow-me/rainbowkit/wallets"
import { getDefaultWallets, RainbowKitProvider, lightTheme} from "@rainbow-me/rainbowkit"
import {configureChains, createConfig, WagmiConfig} from "wagmi"
import { jsonRpcProvider } from "wagmi/providers/jsonRpc"
import { ToastContainer } from 'react-toastify';
import { publicProvider } from "wagmi/providers/public"
import { celo, celoAlfajores } from 'wagmi/chains';
import { connectorsForWallets } from '@rainbow-me/rainbowkit';
import { CeloWallets} from "@celo/rainbowkit-celo"

const inter = Inter({ subsets: ['latin'] })

// export const metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// }

const { chains, publicClient} = configureChains(
  [celoAlfajores, celo],
  [publicProvider()]
);
const projectId = "2fec10a7fee4c9c6ce5079b335cc5d68"

const { wallets } = getDefaultWallets({
  appName: "Car-Rent",
  projectId,
  chains
})

const connectors = connectorsForWallets([
  ...wallets,
  
  {
      groupName: "Recommended with Celo",
      wallets: [
          // Valora({ projectId , chains}),
          // CeloWallets({ chains }),
          metaMaskWallet({projectId, chains }),
          omniWallet({ projectId,  chains }),
          walletConnectWallet({ projectId, chains })
      ],
  },
])
const demoAppInfo = {
  appName: 'Car-Rent',
};

const wagmiConfig = createConfig({
  autoConnect: true,
  connectors,
  publicClient
  
})

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body className={inter.className}>
      <WagmiConfig config={wagmiConfig}>
      <RainbowKitProvider
      theme={lightTheme({
        accentColor: '#EFAE07',
        accentColorForeground: 'white',
        borderRadius: 'small',
        fontStack: 'system',
      })}
      chains={chains} appInfo={demoAppInfo}>
        <ToastContainer
          position="top-center"
          autoClose={5000}
          hideProgressBar={false}
          newestOnTop={false}
          closeOnClick
          rtl={false}
          pauseOnFocusLoss
          draggable
          pauseOnHover
          theme="light"
          />
        {children}
      </RainbowKitProvider>
    </WagmiConfig>
      </body>
    </html>
  )
}
